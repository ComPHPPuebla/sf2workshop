<?xml version="1.0" encoding="UTF-8" ?>
<container xmlns="http://symfony.com/schema/dic/services"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <parameters>
        <parameter key="db.error_mode" type="constant">PDO::ATTR_ERRMODE</parameter>
        <parameter key="db.error_exception" type="constant">PDO::ERRMODE_EXCEPTION</parameter>
        <parameter key="db.fetch_mode" type="constant">PDO::ATTR_DEFAULT_FETCH_MODE</parameter>
        <parameter key="db.fetch_assoc" type="constant">PDO::FETCH_ASSOC</parameter>
        <parameter key="routes.file_path" type="collection">
            <parameter>./</parameter>
        </parameter>
        <parameter key="routes.filename">app/config/routing.xml</parameter>
        <parameter key="routes.router_options" type="collection">
            <parameter key="cache_dir">app/cache</parameter>
            <parameter key="debug">true</parameter>
        </parameter>
        <parameter key="twig.env.options" type="collection">
            <parameter key="cache">app/cache/twig</parameter>
        </parameter>
        <parameter key="form.twig_bridge_dir">vendor/symfony/twig-bridge/Symfony/Bridge/Twig/Resources/views/Form</parameter>
        <parameter key="form.default_theme" type="collection">
            <parameter>form_div_layout.html.twig</parameter>
        </parameter>
    </parameters>

    <services>
        <service id="validator" class="Symfony\Component\Validator\Validator" factory-class="Symfony\Component\Validator\Validation" factory-method="createValidator" />
        <service id="form.validator_extension" class="Symfony\Component\Form\Extension\Validator\ValidatorExtension">
            <argument type="service" id="validator" />
        </service>
        <service id="form.factory_builder" class="Symfony\Component\Form\FormFactoryBuilder" factory-class="Symfony\Component\Form\Forms" factory-method="createFormFactoryBuilder">
            <call method="addExtension">
                <argument type="service" id="form.http_extension" />
            </call>
            <call method="addExtension">
                <argument type="service" id="form.validator_extension" />
            </call>
        </service>
        <service id="form.factory" class="Symfony\Component\Form\FormFactory" factory-service="form.factory_builder" factory-method="getFormFactory" />
        <service id="form.http_extension" class="Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationExtension" />
        <service id="form.renderer_engine" class="Symfony\Bridge\Twig\Form\TwigRendererEngine">
            <argument>%form.default_theme%</argument>
            <call method="setEnvironment">
                <argument type="service" id="twig.environment" />
            </call>
        </service>
        <service id="form.renderer" class="Symfony\Bridge\Twig\Form\TwigRenderer">
            <argument type="service" id="form.renderer_engine" />
        </service>
        <service id="form.extension" class="Symfony\Bridge\Twig\Extension\FormExtension">
            <argument type="service" id="form.renderer" />
        </service>
        <service id="translator" class="Symfony\Component\Translation\Translator">
            <argument>en</argument>
        </service>
        <service id="translation.extension" class="Symfony\Bridge\Twig\Extension\TranslationExtension">
            <argument type="service" id="translator" />
        </service>
        <service id="twig.loader" class="Twig_Loader_Filesystem">
            <argument>%templates.path%</argument>
        </service>
        <service id="twig.environment" class="Twig_Environment">
            <argument type="service" id="twig.loader" />
            <argument>%twig.env.options%</argument>
            <call method="addExtension">
                <argument type="service" id="form.extension" />
            </call>
            <call method="addExtension">
                <argument type="service" id="translation.extension" />
            </call>
        </service>
        <service id="view" class="Framework\View\TwigEngine">
            <argument type="service" id="twig.environment" />
        </service>
        <service id="db.connection" class="PDO">
            <argument>%db.dsn%</argument>
            <argument>%db.user%</argument>
            <argument>%db.password%</argument>
            <call method="setAttribute">
                <argument>%db.error_mode%</argument>
                <argument>%db.error_exception%</argument>
            </call>
            <call method="setAttribute">
                <argument>%db.fetch_mode%</argument>
                <argument>%db.fetch_assoc%</argument>
            </call>
        </service>
        <service id="session" class="Symfony\Component\HttpFoundation\Session\Session">
            <call method="start" />
        </service>
        <service id="events.dispatcher" class="Symfony\Component\EventDispatcher\EventDispatcher" />
        <service id="request" synthetic="true" />
        <service id="routes_file_locator" class="Symfony\Component\Config\FileLocator">
            <argument>%routes.file_path%</argument>
        </service>
        <service id="routes_request_context" class="Symfony\Component\Routing\RequestContext">
            <call method="fromRequest">
                <argument type="service" id="request" />
            </call>
        </service>
        <service id="routes_loader" class="Symfony\Component\Routing\Loader\XmlFileLoader">
            <argument type="service" id="routes_file_locator" />
        </service>
        <service id="routes_router" class="Symfony\Component\Routing\Router">
            <argument type="service" id="routes_loader" />
            <argument>%routes.filename%</argument>
            <argument>%routes.router_options%</argument>
            <argument type="service" id="routes_request_context" />
        </service>
        <service id="kernel_router_listener" class="Symfony\Component\HttpKernel\EventListener\RouterListener">
            <argument type="expression">service('routes_router').getMatcher()</argument>
        </service>
        <service id="kernel_error_controller" class="Framework\ErrorController" />
        <service id="kernel_exception_listener" class="Symfony\Component\HttpKernel\EventListener\ExceptionListener">
            <argument type="service" id="kernel_error_controller" />
        </service>
        <service id="kernel_dispatcher" class="Symfony\Component\EventDispatcher\EventDispatcher">
            <call method="addSubscriber">
                <argument type="service" id="kernel_router_listener" />
            </call>
            <call method="addSubscriber">
                <argument type="service" id="kernel_exception_listener" />
            </call>
        </service>
        <service id="kernel_controller_resolver" class="Framework\HttpKernel\Controller\ControllerResolver">
            <argument type="service" id="service_container" />
        </service>
        <service id="kernel" class="Symfony\Component\HttpKernel\HttpKernel">
            <argument type="service" id="kernel_dispatcher" />
            <argument type="service" id="kernel_controller_resolver" />
        </service>
    </services>

</container>
